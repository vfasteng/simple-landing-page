define("modules/clean/stormcrow/experiment",["require","exports","tslib"],(function(r,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ExperimentGroup=e.Gate=e.Experiment=e.StormcrowExperimentGroup=e.StormcrowGate=e.StormcrowExperiment=void 0;var n=(function(){function r(r){this.variant=void 0!==r?r:""}return Object.defineProperty(r.prototype,"isActive",{get:function(){return""!==this.variant&&!this.variantIn("OFF","CONTROL")},enumerable:!1,configurable:!0}),r.prototype.variantIs=function(r){return this.variant===r},r.prototype.variantIn=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return!!(this.variant&&r&&r.length)&&-1!==r.indexOf(this.variant)},r})();e.StormcrowExperiment=n;var o=function(r){this.isOn=void 0!==r&&("string"==typeof r?"ON"===r:!!r)};e.StormcrowGate=o;var i=(function(){function r(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];this.experiments=r.map((function(r){return new n(r)}))}return r.prototype.hasVariant=function(r){return this.experiments.some((function(e){return e.variantIs(r)}))},r.prototype.hasVariantIn=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return this.experiments.some((function(e){return e.variantIn.apply(e,r)}))},r})();e.StormcrowExperimentGroup=i,e.Experiment=function(r){return new n(r)},e.Gate=function(r){return new o(r)},e.ExperimentGroup=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return new(i.bind.apply(i,t.__spreadArrays([void 0],r)))}})),define("modules/clean/stormcrow/stormcrow_exposure_logger",["require","exports","tslib","modules/clean/deprecated_ajax/ajax"],(function(r,e,t,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.logVariantExposure=e.StormcrowExposureLogger=void 0,n=t.__importStar(n);var o=(function(){function r(){this.exposures={}}return r.prototype.logExposure=function(r,e){n.SilentBackgroundRequest({url:"/log/stormcrow_exposures",data:{stormcrow_name:r,variant:e}})},r.prototype.logExposuresOnce=function(r){var e=this;Object.keys(r).forEach((function(t){if(!(t in e.exposures)){var n=r[t];t&&n&&(e.exposures[t]=n,e.logExposure(t,n))}}))},r})();e.StormcrowExposureLogger=o,e.logVariantExposure=function(r,e){return!(!e||"OFF"===e)&&n.SilentBackgroundRequest({url:"/log/stormcrow_exposures",data:{stormcrow_name:r,variant:e}})}}));
//# sourceMappingURL=pkg-stormcrow.min.js-vflCXP-9H.map